#include <stdio.h>
#include <string.h>
#define MAX 10
char prod[MAX][MAX], prefix[MAX], alpha[MAX], beta[MAX], newProd[MAX][MAX];
int n;
void findPrefix(char *s1, char *s2) 
{
    int i = 0;
    while (s1[i] == s2[i] && s1[i] != '\0') 
	{
        prefix[i] = s1[i];
        i++;
    }
    prefix[i] = '\0';
}
void removeLeftFactoring() 
{
    for (int i = 0; i < n - 1; i++) 
	{
        if (prod[i][0] == prod[i + 1][0]) 
		{ 
            findPrefix(&prod[i][2], &prod[i + 1][2]); 
            printf("%c -> %s%c'\n", prod[i][0], prefix, prod[i][0]);
            printf("%c' -> %s | %s\n", prod[i][0], &prod[i][2] + strlen(prefix), &prod[i + 1][2] + strlen(prefix));
        } else {
            printf("%s\n", prod[i]);
        }
    }
    printf("%s\n", prod[n - 1]); 
}
int main() 
{
    printf("Enter number of productions: ");
    scanf("%d", &n);

    printf("Enter productions:\n");
    for (int i = 0; i < n; i++)
        scanf("%s", prod[i]);

    printf("\nAfter eliminating left factoring:\n");
    removeLeftFactoring();

    return 0;
}
